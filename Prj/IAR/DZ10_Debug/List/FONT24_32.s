///////////////////////////////////////////////////////////////////////////////
//
// IAR ANSI C/C++ Compiler V8.11.1.13263/W32 for ARM      12/Jun/2017  17:32:48
// Copyright 1999-2017 IAR Systems AB.
//
//    Cpu mode     =  thumb
//    Endian       =  little
//    Source file  =  D:\@@@@@@@\Car\Drivers\ZLG_GUI\FONT24_32.C
//    Command line =  
//        -f C:\Users\lll88\AppData\Local\Temp\EWBF83.tmp
//        (D:\@@@@@@@\Car\Drivers\ZLG_GUI\FONT24_32.C -D DEBUG -D
//        ARM_MATH_CM4 -D MK60DZ10 -lA
//        D:\@@@@@@@\Car\Prj\IAR\DZ10_Debug\List -o
//        D:\@@@@@@@\Car\Prj\IAR\DZ10_Debug\Obj --no_cse
//        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
//        --no_scheduling --debug --endian=little --cpu=Cortex-M4 -e
//        --char_is_signed --fpu=None --dlib_config "C:\Program Files (x86)\IAR
//        Systems\Embedded Workbench 8.0\arm\INC\c\DLib_Config_Full.h" -I
//        D:\@@@@@@@\Car\Prj\IAR\..\..\App\ -I
//        D:\@@@@@@@\Car\Prj\IAR\..\..\App\Inc\ -I
//        D:\@@@@@@@\Car\Prj\IAR\..\..\Board\Inc\ -I
//        D:\@@@@@@@\Car\Prj\IAR\..\..\Chip\inc\ -I
//        D:\@@@@@@@\Car\Prj\IAR\..\..\Chip\inc\IAR\ -I
//        D:\@@@@@@@\Car\Prj\IAR\..\..\Chip\inc\kinetis\ -I
//        D:\@@@@@@@\Car\Prj\IAR\..\..\Lib\CMSIS\Inc\ -I
//        D:\@@@@@@@\Car\Prj\IAR\..\..\Lib\FatFs\ -I
//        D:\@@@@@@@\Car\Prj\IAR\..\..\Lib\USB\ -I
//        D:\@@@@@@@\Car\Prj\IAR\..\..\Drivers\ -I
//        D:\@@@@@@@\Car\Prj\IAR\..\..\Drivers\All_Init\ -I
//        D:\@@@@@@@\Car\Prj\IAR\..\..\Drivers\OLED_NEW\ -I
//        D:\@@@@@@@\Car\Prj\IAR\..\..\Drivers\OLED\ -I
//        D:\@@@@@@@\Car\Prj\IAR\..\..\Drivers\lptmr\ -I
//        D:\@@@@@@@\Car\Prj\IAR\..\..\Drivers\IIC_Angle\ -I
//        D:\@@@@@@@\Car\Prj\IAR\..\..\Drivers\ZLG_GUI\ -I
//        D:\@@@@@@@\Car\Prj\IAR\..\..\Drivers\key\ -I
//        D:\@@@@@@@\Car\Prj\IAR\..\..\Drivers\Led\ -I
//        D:\@@@@@@@\Car\Prj\IAR\..\..\Drivers\UI\ -I
//        D:\@@@@@@@\Car\Prj\IAR\..\..\Drivers\Control\ -I
//        D:\@@@@@@@\Car\Prj\IAR\..\..\Drivers\Search\ -I
//        D:\@@@@@@@\Car\Prj\IAR\..\..\Drivers\Fuzzy\ -I
//        D:\@@@@@@@\Car\Prj\IAR\..\..\Drivers\BianMaqi\ -On -I
//        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
//        8.0\arm\CMSIS\Include\" -D ARM_MATH_CM4)
//    Locale       =  C
//    List file    =  
//        D:\@@@@@@@\Car\Prj\IAR\DZ10_Debug\List\FONT24_32.s
//
///////////////////////////////////////////////////////////////////////////////

        RTMODEL "__SystemLibrary", "DLib"
        RTMODEL "__dlib_file_descriptor", "1"
        RTMODEL "__dlib_full_locale_support", "1"
        RTMODEL "__dlib_version", "6"
        AAPCS BASE,INTERWORK
        PRESERVE8
        REQUIRE8

        #define SHT_PROGBITS 0x1

        EXTERN DCB2HEX_TAB
        EXTERN GUI_Point
        EXTERN back_color
        EXTERN disp_color

        PUBLIC FONT24x32
        PUBLIC FONT24x32_TAB
        PUBLIC GUI_PutChar24_32
        
          CFI Names cfiNames0
          CFI StackFrame CFA R13 DATA
          CFI Resource R0:32, R1:32, R2:32, R3:32, R4:32, R5:32, R6:32, R7:32
          CFI Resource R8:32, R9:32, R10:32, R11:32, R12:32, R13:32, R14:32
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 2
          CFI DataAlign 4
          CFI ReturnAddress R14 CODE
          CFI CFA R13+0
          CFI R0 Undefined
          CFI R1 Undefined
          CFI R2 Undefined
          CFI R3 Undefined
          CFI R4 SameValue
          CFI R5 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI R8 SameValue
          CFI R9 SameValue
          CFI R10 SameValue
          CFI R11 SameValue
          CFI R12 Undefined
          CFI R14 SameValue
          CFI EndCommon cfiCommon0
        
// D:\@@@@@@@\Car\Drivers\ZLG_GUI\FONT24_32.C
//    1 /****************************************************************************************
//    2 * 文件名：FONT24_32.C
//    3 * 功能：24*32 ASCII码字体及显示函数。
//    4 * 作者：黄绍斌
//    5 * 日期：2004.02.26
//    6 * 备注：使用GUI_SetColor()函数设置前景颜色及背景色。
//    7 ****************************************************************************************/
//    8 #include "config.h"
//    9 
//   10 #if  FONT24x32_EN==1
//   11 
//   12 /* 24*32字体定义 */

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
        DATA
//   13 const uint8  FONT24x32[][96] = {
FONT24x32:
        DC8 0, 127, 0, 1, 255, 192, 3, 255, 224, 7, 255, 240, 15, 227, 248, 15
        DC8 128, 248, 31, 0, 124, 31, 0, 124, 31, 0, 124, 62, 0, 62, 62, 0, 62
        DC8 62, 0, 62, 62, 0, 62, 62, 0, 62, 62, 0, 62, 62, 0, 62, 62, 0, 62
        DC8 62, 0, 62, 62, 0, 62, 62, 0, 62, 62, 0, 62, 62, 0, 62, 62, 0, 62
        DC8 31, 0, 124, 31, 0, 124, 31, 0, 124, 15, 128, 248, 15, 227, 248, 7
        DC8 255, 240, 3, 255, 224, 1, 255, 192, 0, 127, 0, 0, 3, 192, 0, 3, 192
        DC8 0, 7, 192, 0, 7, 192, 0, 15, 192, 0, 63, 192, 3, 255, 192, 3, 255
        DC8 192, 3, 255, 192, 3, 255, 192, 0, 7, 192, 0, 7, 192, 0, 7, 192, 0
        DC8 7, 192, 0, 7, 192, 0, 7, 192, 0, 7, 192, 0, 7, 192, 0, 7, 192, 0, 7
        DC8 192, 0, 7, 192, 0, 7, 192, 0, 7, 192, 0, 7, 192, 0, 7, 192, 0, 7
        DC8 192, 0, 7, 192, 0, 7, 192, 0, 7, 192, 0, 7, 192, 0, 7, 192, 0, 7
        DC8 192, 0, 127, 128, 1, 255, 224, 3, 255, 240, 7, 255, 248, 15, 225
        DC8 252, 31, 128, 252, 31, 0, 126, 62, 0, 62, 62, 0, 62, 62, 0, 62, 0
        DC8 0, 62, 0, 0, 62, 0, 0, 62, 0, 0, 126, 0, 0, 252, 0, 1, 252, 0, 7
        DC8 248, 0, 15, 224, 0, 63, 192, 0, 127, 128, 1, 254, 0, 3, 252, 0, 7
        DC8 240, 0, 15, 224, 0, 15, 192, 0, 31, 128, 0, 31, 0, 0, 63, 255, 254
        DC8 63, 255, 254, 63, 255, 254, 63, 255, 254, 63, 255, 254, 0, 126, 0
        DC8 3, 255, 192, 7, 255, 224, 15, 255, 240, 31, 129, 248, 31, 0, 248
        DC8 62, 0, 252, 62, 0, 124, 62, 0, 124, 62, 0, 124, 0, 0, 248, 0, 0
        DC8 248, 0, 1, 240, 0, 63, 224, 0, 63, 192, 0, 63, 224, 0, 63, 248, 0
        DC8 1, 252, 0, 0, 124, 0, 0, 126, 0, 0, 62, 0, 0, 62, 124, 0, 62, 124
        DC8 0, 62, 124, 0, 126, 62, 0, 124, 63, 0, 252, 31, 129, 248, 15, 255
        DC8 240, 7, 255, 224, 3, 255, 192, 0, 126, 0, 0, 1, 240, 0, 3, 240, 0
        DC8 7, 240, 0, 7, 240, 0, 15, 240, 0, 31, 240, 0, 30, 240, 0, 62, 240
        DC8 0, 124, 240, 0, 120, 240, 0, 248, 240, 1, 240, 240, 1, 224, 240, 3
        DC8 224, 240, 7, 192, 240, 7, 128, 240, 15, 128, 240, 31, 0, 240, 30, 0
        DC8 240, 62, 0, 240, 63, 255, 255, 63, 255, 255, 63, 255, 255, 63, 255
        DC8 255, 0, 0, 240, 0, 0, 240, 0, 0, 240, 0, 0, 240, 0, 0, 240, 0, 0
        DC8 240, 0, 0, 240, 0, 0, 240, 7, 255, 252, 7, 255, 252, 7, 255, 252, 7
        DC8 255, 252, 15, 128, 0, 15, 128, 0, 15, 128, 0, 15, 128, 0, 15, 0, 0
        DC8 15, 0, 0, 15, 31, 0, 15, 127, 224, 15, 255, 240, 31, 255, 248, 31
        DC8 225, 252, 31, 128, 126, 31, 0, 62, 0, 0, 63, 0, 0, 31, 0, 0, 31, 0
        DC8 0, 31, 0, 0, 31, 0, 0, 31, 62, 0, 63, 62, 0, 62, 31, 0, 126, 31
        DC8 128, 252, 15, 195, 252, 7, 255, 248, 3, 255, 240, 1, 255, 192, 0
        DC8 62, 0, 0, 63, 192, 0, 255, 240, 1, 255, 248, 3, 255, 252, 7, 224
        DC8 124, 15, 192, 62, 15, 128, 30, 31, 0, 30, 31, 0, 0, 31, 0, 0, 62, 0
        DC8 0, 62, 31, 0, 62, 127, 224, 62, 255, 240, 63, 255, 248, 63, 192
        DC8 252, 63, 128, 126, 63, 0, 62, 63, 0, 31, 62, 0, 31, 62, 0, 31, 62
        DC8 0, 31, 30, 0, 31, 31, 0, 31, 31, 0, 31, 15, 128, 62, 15, 128, 126
        DC8 7, 224, 252, 3, 255, 248, 1, 255, 240, 0, 255, 224, 0, 31, 0, 63
        DC8 255, 255, 63, 255, 255, 63, 255, 255, 63, 255, 255, 63, 255, 255, 0
        DC8 0, 31, 0, 0, 62, 0, 0, 124, 0, 0, 248, 0, 1, 240, 0, 3, 224, 0, 7
        DC8 224, 0, 7, 192, 0, 15, 192, 0, 31, 128, 0, 31, 128, 0, 63, 0, 0, 63
        DC8 0, 0, 126, 0, 0, 126, 0, 0, 126, 0, 0, 252, 0, 0, 252, 0, 0, 252, 0
        DC8 1, 248, 0, 1, 248, 0, 1, 248, 0, 1, 248, 0, 3, 240, 0, 3, 240, 0, 3
        DC8 240, 0, 3, 240, 0, 0, 127, 128, 1, 255, 224, 7, 255, 248, 15, 255
        DC8 252, 15, 192, 252, 31, 128, 126, 31, 0, 62, 31, 0, 62, 31, 0, 62
        DC8 31, 0, 62, 31, 128, 126, 15, 128, 124, 15, 225, 252, 7, 255, 248, 1
        DC8 255, 224, 3, 255, 240, 15, 255, 252, 31, 225, 254, 31, 0, 62, 62, 0
        DC8 31, 62, 0, 31, 62, 0, 31, 62, 0, 31, 62, 0, 31, 62, 0, 31, 63, 0
        DC8 63, 31, 0, 62, 31, 192, 254, 15, 255, 252, 7, 255, 248, 3, 255, 240
        DC8 0, 255, 192, 0, 127, 128, 1, 255, 224, 3, 255, 240, 7, 255, 248, 15
        DC8 192, 252, 31, 128, 124, 31, 0, 62, 30, 0, 62, 62, 0, 31, 62, 0, 31
        DC8 62, 0, 31, 62, 0, 31, 62, 0, 31, 30, 0, 63, 31, 0, 63, 31, 128, 127
        DC8 15, 193, 255, 7, 255, 255, 3, 255, 223, 0, 255, 31, 0, 60, 31, 0, 0
        DC8 63, 0, 0, 62, 0, 0, 62, 62, 0, 126, 62, 0, 124, 31, 0, 248, 31, 129
        DC8 248, 15, 255, 240, 7, 255, 224, 3, 255, 192, 0, 255, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 28, 0, 0, 62, 0, 0, 62, 0, 0, 62, 0, 0
        DC8 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 60, 0, 0, 60, 0, 0, 60, 0, 0, 60, 0, 0, 60, 0, 0, 60
        DC8 0, 0, 60, 0, 63, 255, 252, 63, 255, 252, 63, 255, 252, 63, 255, 252
        DC8 0, 60, 0, 0, 60, 0, 0, 60, 0, 0, 60, 0, 0, 60, 0, 0, 60, 0, 0, 60
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 63, 255, 252
        DC8 63, 255, 252, 63, 255, 252, 63, 255, 252, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 28
        DC8 0, 0, 62, 0, 0, 62, 0, 0, 62, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 28, 0, 0, 62, 0, 0, 62, 0, 0, 62, 0, 0, 28, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
//   14 /*  0  */
//   15   {
//   16    ________,_XXXXXXX,________,
//   17    _______X,XXXXXXXX,XX______,
//   18    ______XX,XXXXXXXX,XXX_____,
//   19    _____XXX,XXXXXXXX,XXXX____,
//   20    ____XXXX,XXX___XX,XXXXX___,
//   21    ____XXXX,X_______,XXXXX___,
//   22    ___XXXXX,________,_XXXXX__,
//   23    ___XXXXX,________,_XXXXX__,
//   24    ___XXXXX,________,_XXXXX__,
//   25    __XXXXX_,________,__XXXXX_,
//   26    __XXXXX_,________,__XXXXX_,
//   27    __XXXXX_,________,__XXXXX_,
//   28    __XXXXX_,________,__XXXXX_,
//   29    __XXXXX_,________,__XXXXX_,
//   30    __XXXXX_,________,__XXXXX_,
//   31    __XXXXX_,________,__XXXXX_,
//   32    __XXXXX_,________,__XXXXX_,
//   33    __XXXXX_,________,__XXXXX_,
//   34    __XXXXX_,________,__XXXXX_,
//   35    __XXXXX_,________,__XXXXX_,
//   36    __XXXXX_,________,__XXXXX_,
//   37    __XXXXX_,________,__XXXXX_,
//   38    __XXXXX_,________,__XXXXX_,
//   39    ___XXXXX,________,_XXXXX__,
//   40    ___XXXXX,________,_XXXXX__,
//   41    ___XXXXX,________,_XXXXX__,
//   42    ____XXXX,X_______,XXXXX___,
//   43    ____XXXX,XXX___XX,XXXXX___,
//   44    _____XXX,XXXXXXXX,XXXX____,
//   45    ______XX,XXXXXXXX,XXX_____,
//   46    _______X,XXXXXXXX,XX______,
//   47    ________,_XXXXXXX,________}
//   48 
//   49 /*  1  */
//   50  ,{
//   51    ________,______XX,XX______,
//   52    ________,______XX,XX______,
//   53    ________,_____XXX,XX______,
//   54    ________,_____XXX,XX______,
//   55    ________,____XXXX,XX______,
//   56    ________,__XXXXXX,XX______,
//   57    ______XX,XXXXXXXX,XX______,
//   58    ______XX,XXXXXXXX,XX______,
//   59    ______XX,XXXXXXXX,XX______,
//   60    ______XX,XXXXXXXX,XX______,
//   61    ________,_____XXX,XX______,
//   62    ________,_____XXX,XX______,
//   63    ________,_____XXX,XX______,
//   64    ________,_____XXX,XX______,
//   65    ________,_____XXX,XX______,
//   66    ________,_____XXX,XX______,
//   67    ________,_____XXX,XX______,
//   68    ________,_____XXX,XX______,
//   69    ________,_____XXX,XX______,
//   70    ________,_____XXX,XX______,
//   71    ________,_____XXX,XX______,
//   72    ________,_____XXX,XX______,
//   73    ________,_____XXX,XX______,
//   74    ________,_____XXX,XX______,
//   75    ________,_____XXX,XX______,
//   76    ________,_____XXX,XX______,
//   77    ________,_____XXX,XX______,
//   78    ________,_____XXX,XX______,
//   79    ________,_____XXX,XX______,
//   80    ________,_____XXX,XX______,
//   81    ________,_____XXX,XX______,
//   82    ________,_____XXX,XX______}
//   83 
//   84 /*  2  */
//   85  ,{
//   86    ________,_XXXXXXX,X_______,
//   87    _______X,XXXXXXXX,XXX_____,
//   88    ______XX,XXXXXXXX,XXXX____,
//   89    _____XXX,XXXXXXXX,XXXXX___,
//   90    ____XXXX,XXX____X,XXXXXX__,
//   91    ___XXXXX,X_______,XXXXXX__,
//   92    ___XXXXX,________,_XXXXXX_,
//   93    __XXXXX_,________,__XXXXX_,
//   94    __XXXXX_,________,__XXXXX_,
//   95    __XXXXX_,________,__XXXXX_,
//   96    ________,________,__XXXXX_,
//   97    ________,________,__XXXXX_,
//   98    ________,________,__XXXXX_,
//   99    ________,________,_XXXXXX_,
//  100    ________,________,XXXXXX__,
//  101    ________,_______X,XXXXXX__,
//  102    ________,_____XXX,XXXXX___,
//  103    ________,____XXXX,XXX_____,
//  104    ________,__XXXXXX,XX______,
//  105    ________,_XXXXXXX,X_______,
//  106    _______X,XXXXXXX_,________,
//  107    ______XX,XXXXXX__,________,
//  108    _____XXX,XXXX____,________,
//  109    ____XXXX,XXX_____,________,
//  110    ____XXXX,XX______,________,
//  111    ___XXXXX,X_______,________,
//  112    ___XXXXX,________,________,
//  113    __XXXXXX,XXXXXXXX,XXXXXXX_,
//  114    __XXXXXX,XXXXXXXX,XXXXXXX_,
//  115    __XXXXXX,XXXXXXXX,XXXXXXX_,
//  116    __XXXXXX,XXXXXXXX,XXXXXXX_,
//  117    __XXXXXX,XXXXXXXX,XXXXXXX_}
//  118 
//  119 /*  3  */
//  120  ,{
//  121    ________,_XXXXXX_,________,
//  122    ______XX,XXXXXXXX,XX______,
//  123    _____XXX,XXXXXXXX,XXX_____,
//  124    ____XXXX,XXXXXXXX,XXXX____,
//  125    ___XXXXX,X______X,XXXXX___,
//  126    ___XXXXX,________,XXXXX___,
//  127    __XXXXX_,________,XXXXXX__,
//  128    __XXXXX_,________,_XXXXX__,
//  129    __XXXXX_,________,_XXXXX__,
//  130    __XXXXX_,________,_XXXXX__,
//  131    ________,________,XXXXX___,
//  132    ________,________,XXXXX___,
//  133    ________,_______X,XXXX____,
//  134    ________,__XXXXXX,XXX_____,
//  135    ________,__XXXXXX,XX______,
//  136    ________,__XXXXXX,XXX_____,
//  137    ________,__XXXXXX,XXXXX___,
//  138    ________,_______X,XXXXXX__,
//  139    ________,________,_XXXXX__,
//  140    ________,________,_XXXXXX_,
//  141    ________,________,__XXXXX_,
//  142    ________,________,__XXXXX_,
//  143    _XXXXX__,________,__XXXXX_,
//  144    _XXXXX__,________,__XXXXX_,
//  145    _XXXXX__,________,_XXXXXX_,
//  146    __XXXXX_,________,_XXXXX__,
//  147    __XXXXXX,________,XXXXXX__,
//  148    ___XXXXX,X______X,XXXXX___,
//  149    ____XXXX,XXXXXXXX,XXXX____,
//  150    _____XXX,XXXXXXXX,XXX_____,
//  151    ______XX,XXXXXXXX,XX______,
//  152    ________,_XXXXXX_,________}
//  153 
//  154 /*  4  */
//  155  ,{
//  156    ________,_______X,XXXX____,
//  157    ________,______XX,XXXX____,
//  158    ________,_____XXX,XXXX____,
//  159    ________,_____XXX,XXXX____,
//  160    ________,____XXXX,XXXX____,
//  161    ________,___XXXXX,XXXX____,
//  162    ________,___XXXX_,XXXX____,
//  163    ________,__XXXXX_,XXXX____,
//  164    ________,_XXXXX__,XXXX____,
//  165    ________,_XXXX___,XXXX____,
//  166    ________,XXXXX___,XXXX____,
//  167    _______X,XXXX____,XXXX____,
//  168    _______X,XXX_____,XXXX____,
//  169    ______XX,XXX_____,XXXX____,
//  170    _____XXX,XX______,XXXX____,
//  171    _____XXX,X_______,XXXX____,
//  172    ____XXXX,X_______,XXXX____,
//  173    ___XXXXX,________,XXXX____,
//  174    ___XXXX_,________,XXXX____,
//  175    __XXXXX_,________,XXXX____,
//  176    __XXXXXX,XXXXXXXX,XXXXXXXX,
//  177    __XXXXXX,XXXXXXXX,XXXXXXXX,
//  178    __XXXXXX,XXXXXXXX,XXXXXXXX,
//  179    __XXXXXX,XXXXXXXX,XXXXXXXX,
//  180    ________,________,XXXX____,
//  181    ________,________,XXXX____,
//  182    ________,________,XXXX____,
//  183    ________,________,XXXX____,
//  184    ________,________,XXXX____,
//  185    ________,________,XXXX____,
//  186    ________,________,XXXX____,
//  187    ________,________,XXXX____}
//  188 
//  189 /*  5  */
//  190  ,{
//  191    _____XXX,XXXXXXXX,XXXXXX__,
//  192    _____XXX,XXXXXXXX,XXXXXX__,
//  193    _____XXX,XXXXXXXX,XXXXXX__,
//  194    _____XXX,XXXXXXXX,XXXXXX__,
//  195    ____XXXX,X_______,________,
//  196    ____XXXX,X_______,________,
//  197    ____XXXX,X_______,________,
//  198    ____XXXX,X_______,________,
//  199    ____XXXX,________,________,
//  200    ____XXXX,________,________,
//  201    ____XXXX,___XXXXX,________,
//  202    ____XXXX,_XXXXXXX,XXX_____,
//  203    ____XXXX,XXXXXXXX,XXXX____,
//  204    ___XXXXX,XXXXXXXX,XXXXX___,
//  205    ___XXXXX,XXX____X,XXXXXX__,
//  206    ___XXXXX,X_______,_XXXXXX_,
//  207    ___XXXXX,________,__XXXXX_,
//  208    ________,________,__XXXXXX,
//  209    ________,________,___XXXXX,
//  210    ________,________,___XXXXX,
//  211    ________,________,___XXXXX,
//  212    ________,________,___XXXXX,
//  213    ________,________,___XXXXX,
//  214    __XXXXX_,________,__XXXXXX,
//  215    __XXXXX_,________,__XXXXX_,
//  216    ___XXXXX,________,_XXXXXX_,
//  217    ___XXXXX,X_______,XXXXXX__,
//  218    ____XXXX,XX____XX,XXXXXX__,
//  219    _____XXX,XXXXXXXX,XXXXX___,
//  220    ______XX,XXXXXXXX,XXXX____,
//  221    _______X,XXXXXXXX,XX______,
//  222    ________,__XXXXX_,________}
//  223 
//  224 /*  6  */
//  225  ,{
//  226    ________,__XXXXXX,XX______,
//  227    ________,XXXXXXXX,XXXX____,
//  228    _______X,XXXXXXXX,XXXXX___,
//  229    ______XX,XXXXXXXX,XXXXXX__,
//  230    _____XXX,XXX_____,_XXXXX__,
//  231    ____XXXX,XX______,__XXXXX_,
//  232    ____XXXX,X_______,___XXXX_,
//  233    ___XXXXX,________,___XXXX_,
//  234    ___XXXXX,________,________,
//  235    ___XXXXX,________,________,
//  236    __XXXXX_,________,________,
//  237    __XXXXX_,___XXXXX,________,
//  238    __XXXXX_,_XXXXXXX,XXX_____,
//  239    __XXXXX_,XXXXXXXX,XXXX____,
//  240    __XXXXXX,XXXXXXXX,XXXXX___,
//  241    __XXXXXX,XX______,XXXXXX__,
//  242    __XXXXXX,X_______,_XXXXXX_,
//  243    __XXXXXX,________,__XXXXX_,
//  244    __XXXXXX,________,___XXXXX,
//  245    __XXXXX_,________,___XXXXX,
//  246    __XXXXX_,________,___XXXXX,
//  247    __XXXXX_,________,___XXXXX,
//  248    ___XXXX_,________,___XXXXX,
//  249    ___XXXXX,________,___XXXXX,
//  250    ___XXXXX,________,___XXXXX,
//  251    ____XXXX,X_______,__XXXXX_,
//  252    ____XXXX,X_______,_XXXXXX_,
//  253    _____XXX,XXX_____,XXXXXX__,
//  254    ______XX,XXXXXXXX,XXXXX___,
//  255    _______X,XXXXXXXX,XXXX____,
//  256    ________,XXXXXXXX,XXX_____,
//  257    ________,___XXXXX,________}
//  258 
//  259 /*  7  */
//  260  ,{
//  261    __XXXXXX,XXXXXXXX,XXXXXXXX,
//  262    __XXXXXX,XXXXXXXX,XXXXXXXX,
//  263    __XXXXXX,XXXXXXXX,XXXXXXXX,
//  264    __XXXXXX,XXXXXXXX,XXXXXXXX,
//  265    __XXXXXX,XXXXXXXX,XXXXXXXX,
//  266    ________,________,___XXXXX,
//  267    ________,________,__XXXXX_,
//  268    ________,________,_XXXXX__,
//  269    ________,________,XXXXX___,
//  270    ________,_______X,XXXX____,
//  271    ________,______XX,XXX_____,
//  272    ________,_____XXX,XXX_____,
//  273    ________,_____XXX,XX______,
//  274    ________,____XXXX,XX______,
//  275    ________,___XXXXX,X_______,
//  276    ________,___XXXXX,X_______,
//  277    ________,__XXXXXX,________,
//  278    ________,__XXXXXX,________,
//  279    ________,_XXXXXX_,________,
//  280    ________,_XXXXXX_,________,
//  281    ________,_XXXXXX_,________,
//  282    ________,XXXXXX__,________,
//  283    ________,XXXXXX__,________,
//  284    ________,XXXXXX__,________,
//  285    _______X,XXXXX___,________,
//  286    _______X,XXXXX___,________,
//  287    _______X,XXXXX___,________,
//  288    _______X,XXXXX___,________,
//  289    ______XX,XXXX____,________,
//  290    ______XX,XXXX____,________,
//  291    ______XX,XXXX____,________,
//  292    ______XX,XXXX____,________}
//  293 
//  294 /*  8  */
//  295  ,{
//  296    ________,_XXXXXXX,X_______,
//  297    _______X,XXXXXXXX,XXX_____,
//  298    _____XXX,XXXXXXXX,XXXXX___,
//  299    ____XXXX,XXXXXXXX,XXXXXX__,
//  300    ____XXXX,XX______,XXXXXX__,
//  301    ___XXXXX,X_______,_XXXXXX_,
//  302    ___XXXXX,________,__XXXXX_,
//  303    ___XXXXX,________,__XXXXX_,
//  304    ___XXXXX,________,__XXXXX_,
//  305    ___XXXXX,________,__XXXXX_,
//  306    ___XXXXX,X_______,_XXXXXX_,
//  307    ____XXXX,X_______,_XXXXX__,
//  308    ____XXXX,XXX____X,XXXXXX__,
//  309    _____XXX,XXXXXXXX,XXXXX___,
//  310    _______X,XXXXXXXX,XXX_____,
//  311    ______XX,XXXXXXXX,XXXX____,
//  312    ____XXXX,XXXXXXXX,XXXXXX__,
//  313    ___XXXXX,XXX____X,XXXXXXX_,
//  314    ___XXXXX,________,__XXXXX_,
//  315    __XXXXX_,________,___XXXXX,
//  316    __XXXXX_,________,___XXXXX,
//  317    __XXXXX_,________,___XXXXX,
//  318    __XXXXX_,________,___XXXXX,
//  319    __XXXXX_,________,___XXXXX,
//  320    __XXXXX_,________,___XXXXX,
//  321    __XXXXXX,________,__XXXXXX,
//  322    ___XXXXX,________,__XXXXX_,
//  323    ___XXXXX,XX______,XXXXXXX_,
//  324    ____XXXX,XXXXXXXX,XXXXXX__,
//  325    _____XXX,XXXXXXXX,XXXXX___,
//  326    ______XX,XXXXXXXX,XXXX____,
//  327    ________,XXXXXXXX,XX______}
//  328 
//  329 /*  9  */
//  330  ,{
//  331    ________,_XXXXXXX,X_______,
//  332    _______X,XXXXXXXX,XXX_____,
//  333    ______XX,XXXXXXXX,XXXX____,
//  334    _____XXX,XXXXXXXX,XXXXX___,
//  335    ____XXXX,XX______,XXXXXX__,
//  336    ___XXXXX,X_______,_XXXXX__,
//  337    ___XXXXX,________,__XXXXX_,
//  338    ___XXXX_,________,__XXXXX_,
//  339    __XXXXX_,________,___XXXXX,
//  340    __XXXXX_,________,___XXXXX,
//  341    __XXXXX_,________,___XXXXX,
//  342    __XXXXX_,________,___XXXXX,
//  343    __XXXXX_,________,___XXXXX,
//  344    ___XXXX_,________,__XXXXXX,
//  345    ___XXXXX,________,__XXXXXX,
//  346    ___XXXXX,X_______,_XXXXXXX,
//  347    ____XXXX,XX_____X,XXXXXXXX,
//  348    _____XXX,XXXXXXXX,XXXXXXXX,
//  349    ______XX,XXXXXXXX,XX_XXXXX,
//  350    ________,XXXXXXXX,___XXXXX,
//  351    ________,__XXXX__,___XXXXX,
//  352    ________,________,__XXXXXX,
//  353    ________,________,__XXXXX_,
//  354    ________,________,__XXXXX_,
//  355    __XXXXX_,________,_XXXXXX_,
//  356    __XXXXX_,________,_XXXXX__,
//  357    ___XXXXX,________,XXXXX___,
//  358    ___XXXXX,X______X,XXXXX___,
//  359    ____XXXX,XXXXXXXX,XXXX____,
//  360    _____XXX,XXXXXXXX,XXX_____,
//  361    ______XX,XXXXXXXX,XX______,
//  362    ________,XXXXXXXX,________}
//  363 
//  364 /*  .  */
//  365  ,{
//  366    ________,________,________,
//  367    ________,________,________,
//  368    ________,________,________,
//  369    ________,________,________,
//  370    ________,________,________,
//  371    ________,________,________,
//  372    ________,________,________,
//  373    ________,________,________,
//  374    ________,________,________,
//  375    ________,________,________,
//  376    ________,________,________,
//  377    ________,________,________,
//  378    ________,________,________,
//  379    ________,________,________,
//  380    ________,________,________,
//  381    ________,________,________,
//  382    ________,________,________,
//  383    ________,________,________,
//  384    ________,________,________,
//  385    ________,________,________,
//  386    ________,________,________,
//  387    ________,________,________,
//  388    ________,________,________,
//  389    ________,________,________,
//  390    ________,________,________,
//  391    ________,________,________,
//  392    ________,________,________,
//  393    ________,___XXX__,________,
//  394    ________,__XXXXX_,________,
//  395    ________,__XXXXX_,________,
//  396    ________,__XXXXX_,________,
//  397    ________,___XXX__,________}
//  398 
//  399 /*  +  */
//  400  ,{
//  401    ________,________,________,
//  402    ________,________,________,
//  403    ________,________,________,
//  404    ________,________,________,
//  405    ________,________,________,
//  406    ________,________,________,
//  407    ________,________,________,
//  408    ________,________,________,
//  409    ________,__XXXX__,________,
//  410    ________,__XXXX__,________,
//  411    ________,__XXXX__,________,
//  412    ________,__XXXX__,________,
//  413    ________,__XXXX__,________,
//  414    ________,__XXXX__,________,
//  415    ________,__XXXX__,________,
//  416    __XXXXXX,XXXXXXXX,XXXXXX__,
//  417    __XXXXXX,XXXXXXXX,XXXXXX__,
//  418    __XXXXXX,XXXXXXXX,XXXXXX__,
//  419    __XXXXXX,XXXXXXXX,XXXXXX__,
//  420    ________,__XXXX__,________,
//  421    ________,__XXXX__,________,
//  422    ________,__XXXX__,________,
//  423    ________,__XXXX__,________,
//  424    ________,__XXXX__,________,
//  425    ________,__XXXX__,________,
//  426    ________,__XXXX__,________,
//  427    ________,________,________,
//  428    ________,________,________,
//  429    ________,________,________,
//  430    ________,________,________,
//  431    ________,________,________,
//  432    ________,________,________}
//  433 
//  434 /*  -  */
//  435  ,{
//  436    ________,________,________,
//  437    ________,________,________,
//  438    ________,________,________,
//  439    ________,________,________,
//  440    ________,________,________,
//  441    ________,________,________,
//  442    ________,________,________,
//  443    ________,________,________,
//  444    ________,________,________,
//  445    ________,________,________,
//  446    ________,________,________,
//  447    ________,________,________,
//  448    ________,________,________,
//  449    ________,________,________,
//  450    ________,________,________,
//  451    __XXXXXX,XXXXXXXX,XXXXXX__,
//  452    __XXXXXX,XXXXXXXX,XXXXXX__,
//  453    __XXXXXX,XXXXXXXX,XXXXXX__,
//  454    __XXXXXX,XXXXXXXX,XXXXXX__,
//  455    ________,________,________,
//  456    ________,________,________,
//  457    ________,________,________,
//  458    ________,________,________,
//  459    ________,________,________,
//  460    ________,________,________,
//  461    ________,________,________,
//  462    ________,________,________,
//  463    ________,________,________,
//  464    ________,________,________,
//  465    ________,________,________,
//  466    ________,________,________,
//  467    ________,________,________}
//  468 
//  469 /*  :  */
//  470  ,{
//  471    ________,________,________,
//  472    ________,________,________,
//  473    ________,________,________,
//  474    ________,________,________,
//  475    ________,________,________,
//  476    ________,________,________,
//  477    ________,________,________,
//  478    ________,________,________,
//  479    ________,________,________,
//  480    ________,________,________,
//  481    ________,________,________,
//  482    ________,________,________,
//  483    ________,___XXX__,________,
//  484    ________,__XXXXX_,________,
//  485    ________,__XXXXX_,________,
//  486    ________,__XXXXX_,________,
//  487    ________,___XXX__,________,
//  488    ________,________,________,
//  489    ________,________,________,
//  490    ________,________,________,
//  491    ________,___XXX__,________,
//  492    ________,__XXXXX_,________,
//  493    ________,__XXXXX_,________,
//  494    ________,__XXXXX_,________,
//  495    ________,___XXX__,________,
//  496    ________,________,________,
//  497    ________,________,________,
//  498    ________,________,________,
//  499    ________,________,________,
//  500    ________,________,________,
//  501    ________,________,________,
//  502    ________,________,________}
//  503    
//  504 /*  空格  */   
//  505  ,{
//  506    ________,________,________,
//  507    ________,________,________,
//  508    ________,________,________,
//  509    ________,________,________,
//  510    ________,________,________,
//  511    ________,________,________,
//  512    ________,________,________,
//  513    ________,________,________,
//  514    ________,________,________,
//  515    ________,________,________,
//  516    ________,________,________,
//  517    ________,________,________,
//  518    ________,________,________,
//  519    ________,________,________,
//  520    ________,________,________,
//  521    ________,________,________,
//  522    ________,________,________,
//  523    ________,________,________,
//  524    ________,________,________,
//  525    ________,________,________,
//  526    ________,________,________,
//  527    ________,________,________,
//  528    ________,________,________,
//  529    ________,________,________,
//  530    ________,________,________,
//  531    ________,________,________,
//  532    ________,________,________,
//  533    ________,________,________,
//  534    ________,________,________,
//  535    ________,________,________,
//  536    ________,________,________,
//  537    ________,________,________}
//  538 };
//  539 
//  540 
//  541 
//  542 
//  543 
//  544 
//  545 
//  546 
//  547 
//  548 
//  549 
//  550 
//  551 ;
//  552 
//  553 /* ASCII码字符字模检索表 */

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
        DATA
//  554 const  char  FONT24x32_TAB[]="0123456789.+-: "; 
FONT24x32_TAB:
        DC8 "0123456789.+-: "
//  555 
//  556 /****************************************************************************
//  557 * 名称：GUI_PutChar24_32()
//  558 * 功能：显示ASCII码(24*32字体)，显示值为'0'-'9'、'.'、'+'、'-'及':'(若为其它值，则显示' ')。
//  559 * 入口参数： x		指定显示位置，x坐标
//  560 *           y		指定显示位置，y坐标
//  561 *           ch		要显示的ASCII码值。
//  562 * 出口参数：返回值为1时表示操作成功，为0时表示操作失败。
//  563 * 说明：操作失败原因是指定地址超出有效范围。
//  564 ****************************************************************************/
//  565 
//  566 #if 0
//  567 
//  568 uint8  GUI_PutChar24_32(uint32 x, uint32 y, uint8 ch)
//  569 {  uint8   font_dat;
//  570    uint8   i, j;
//  571    TCOLOR  bakc;
//  572 
//  573    /* 参数过滤 */
//  574    if( x>(GUI_LCM_XMAX-32) ) return(0);
//  575    if( y>(GUI_LCM_YMAX-32) ) return(0);
//  576    for(i=0; i<14; i++)
//  577    {  if(FONT24x32_TAB[i]==ch) break;
//  578    }
//  579    ch = i;
//  580     
//  581    for(i=0; i<32; i++)						// 显示共32行
//  582    {  for(j=0; j<24; j++)					// 每行共24点
//  583       {  /* 若当前点为0、8、16点，读取点阵数据 */
//  584          if( (j&0x07)==0 ) font_dat = FONT24x32[ch][i*3+j>>3];      
//  585          /* 设置相应的点为color或为back_color */
//  586          if( (font_dat&DCB2HEX_TAB[j])==0 ) GUI_CopyColor(&bakc, back_color);
//  587             else  GUI_CopyColor(&bakc, disp_color);
//  588          GUI_Point(x, y, bakc);       
//  589          x++;
//  590       }
//  591       
//  592       y++;									// 指向下一行
//  593       x -= 24;								// 恢复x值
//  594    }
//  595    
//  596    return(1);
//  597 }
//  598 #endif
//  599 

        SECTION `.text`:CODE:NOROOT(2)
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function GUI_PutChar24_32
        THUMB
//  600 uint8  GUI_PutChar24_32(uint32 x, uint32 y, uint8 ch)
//  601 {  uint8   font_dat;
GUI_PutChar24_32:
        PUSH     {R3-R11,LR}
          CFI R14 Frame(CFA, -4)
          CFI R11 Frame(CFA, -8)
          CFI R10 Frame(CFA, -12)
          CFI R9 Frame(CFA, -16)
          CFI R8 Frame(CFA, -20)
          CFI R7 Frame(CFA, -24)
          CFI R6 Frame(CFA, -28)
          CFI R5 Frame(CFA, -32)
          CFI R4 Frame(CFA, -36)
          CFI CFA R13+40
        MOVS     R4,R0
        MOVS     R5,R1
        MOVS     R6,R2
//  602    uint8   i, j, k;
//  603    TCOLOR  bakc;
//  604 
//  605    /* 参数过滤 */
//  606    if( x>(GUI_LCM_XMAX-32) ) return(0);
        CMP      R4,#+97
        BCC.N    ??GUI_PutChar24_32_0
        MOVS     R0,#+0
        B.N      ??GUI_PutChar24_32_1
//  607    if( y>(GUI_LCM_YMAX-32) ) return(0);
??GUI_PutChar24_32_0:
        CMP      R5,#+33
        BCC.N    ??GUI_PutChar24_32_2
        MOVS     R0,#+0
        B.N      ??GUI_PutChar24_32_1
//  608    for(i=0; i<14; i++)
??GUI_PutChar24_32_2:
        MOVS     R0,#+0
        MOVS     R7,R0
??GUI_PutChar24_32_3:
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        CMP      R7,#+14
        BGE.N    ??GUI_PutChar24_32_4
//  609    {  if(FONT24x32_TAB[i]==ch) break;
        LDR.N    R0,??GUI_PutChar24_32_5
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        LDRSB    R0,[R0, R7]
        MOVS     R1,R6
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        CMP      R0,R1
        BEQ.N    ??GUI_PutChar24_32_4
//  610    }
??GUI_PutChar24_32_6:
        ADDS     R7,R7,#+1
        B.N      ??GUI_PutChar24_32_3
//  611    ch = i;
??GUI_PutChar24_32_4:
        MOVS     R6,R7
//  612     
//  613    for(i=0; i<32; i++)      // 显示共32行
        MOVS     R0,#+0
        MOVS     R7,R0
??GUI_PutChar24_32_7:
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        CMP      R7,#+32
        BGE.N    ??GUI_PutChar24_32_8
//  614    { 
//  615       for(j=0; j<3; j++)     // 每行共3字节 
        MOVS     R0,#+0
        MOV      R8,R0
??GUI_PutChar24_32_9:
        UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
        CMP      R8,#+3
        BGE.N    ??GUI_PutChar24_32_10
//  616       {  
//  617    font_dat = FONT24x32[ch][i*3+j];      
        LDR.N    R0,??GUI_PutChar24_32_5+0x4
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        MOVS     R1,#+96
        MUL      R1,R1,R6
        ADD      R0,R0,R1
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        MOVS     R1,#+3
        UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
        MLA      R1,R1,R7,R8
        LDRB     R0,[R0, R1]
        MOV      R11,R0
//  618          /* 设置相应的点为color或为back_color */
//  619     for(k=0; k<8; k++)
        MOVS     R0,#+0
        MOV      R9,R0
??GUI_PutChar24_32_11:
        UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
        CMP      R9,#+8
        BGE.N    ??GUI_PutChar24_32_12
//  620          {
//  621          if( (font_dat&DCB2HEX_TAB[k])==0 ) 
        LDR.N    R0,??GUI_PutChar24_32_5+0x8
        UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
        LDRB     R1,[R0, R9]
        TST      R11,R1
        BNE.N    ??GUI_PutChar24_32_13
//  622      GUI_CopyColor(&bakc, back_color);
        LDR.N    R0,??GUI_PutChar24_32_5+0xC
        LDRB     R0,[R0, #+0]
        MOV      R10,R0
        B.N      ??GUI_PutChar24_32_14
//  623          else  
//  624       GUI_CopyColor(&bakc, disp_color);
??GUI_PutChar24_32_13:
        LDR.N    R0,??GUI_PutChar24_32_5+0x10
        LDRB     R0,[R0, #+0]
        MOV      R10,R0
//  625     GUI_Point(x, y, bakc);       
??GUI_PutChar24_32_14:
        MOV      R2,R10
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R1,R5
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        MOVS     R0,R4
        UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
          CFI FunCall GUI_Point
        BL       GUI_Point
//  626           x++;
        ADDS     R4,R4,#+1
//  627    }
        ADDS     R9,R9,#+1
        B.N      ??GUI_PutChar24_32_11
//  628       } 
??GUI_PutChar24_32_12:
        ADDS     R8,R8,#+1
        B.N      ??GUI_PutChar24_32_9
//  629       y++;         
??GUI_PutChar24_32_10:
        ADDS     R5,R5,#+1
//  630 
//  631 // 指向下一行
//  632       x -= 24;        
        SUBS     R4,R4,#+24
//  633 
//  634 // 恢复x值
//  635    }
        ADDS     R7,R7,#+1
        B.N      ??GUI_PutChar24_32_7
//  636    
//  637    return(1);
??GUI_PutChar24_32_8:
        MOVS     R0,#+1
??GUI_PutChar24_32_1:
        POP      {R1,R4-R11,PC}   ;; return
        DATA
??GUI_PutChar24_32_5:
        DC32     FONT24x32_TAB
        DC32     FONT24x32
        DC32     DCB2HEX_TAB
        DC32     back_color
        DC32     disp_color
//  638 }
          CFI EndBlock cfiBlock0

        SECTION `.iar_vfe_header`:DATA:NOALLOC:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
        DC32 0

        END
//  639 #endif
//  640 
// 
// 1 456 bytes in section .rodata
//   220 bytes in section .text
// 
//   220 bytes of CODE  memory
// 1 456 bytes of CONST memory
//
//Errors: none
//Warnings: none
